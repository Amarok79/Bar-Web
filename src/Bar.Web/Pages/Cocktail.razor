@page "/cocktail/{key}"
@inject IDrinkRepository Repository
@inject NavigationManager NavigationManager


<PageLayout BannerText="@mDrink?.Name"
            BannerVisible="true"
            HeaderVisible="false">

    <ChildContent>

        <img class="detail-image"
             src="@(Utils.GetHighResDrinkImagePath(mDrink.Image))"/>

        <div class="detail-pane-ingredients"
             hidden="@(mDrink.Recipe.Ingredients.Count == 0)">
            <p class="detail-title">Rezeptur</p>
            <table>
                @foreach (var ingredient in mDrink.Recipe.Ingredients) {
                    <tr>
                        <td class="detail-ingredient-amount">@ingredient.Amount</td>
                        <td class="detail-ingredient-unit">@ingredient.Unit</td>
                        <td class="detail-ingredient-substance">@ingredient.Substance</td>
                    </tr>
                }
            </table>
        </div>

        <div class="detail-pane-glassiceetc">
            <div class="float-left"
                 hidden="@(String.IsNullOrEmpty(mDrink.Glass))"
                 style="margin-right: 100px">
                <p class="detail-title">Glas</p>
                <p class="detail-text">@mDrink.Glass</p>
            </div>

            <div class="float-left"
                 hidden="@(String.IsNullOrEmpty(mDrink.Ice))"
                 style="margin-right: 100px">
                <p class="detail-title">Eis</p>
                <p class="detail-text">@mDrink.GetTranslatedIce()</p>
            </div>

            <div hidden="@(String.IsNullOrEmpty(mDrink.Garnish))">
                <p class="detail-title">Dekoration</p>
                <p class="detail-text">@mDrink.Garnish</p>
            </div>
        </div>

        <div class="detail-pane-instructions"
             hidden="@(mDrink.Recipe.Instructions.Count == 0)">
            <p class="detail-title">Arbeitsschritte</p>
            <ol>
                @foreach (var instruction in mDrink.Recipe.Instructions) {
                    <li class="detail-instructions-item">@instruction</li>
                }
            </ol>
        </div>

        <div class="detail-pane-description"
             hidden="@(String.IsNullOrEmpty(mDrink.Description))">
            <p class="detail-title">Beschreibung</p>
            <p class="detail-text">@mDrink.Description</p>
        </div>

    </ChildContent>

    <FooterContent>
        <Navigation/>
    </FooterContent>

</PageLayout>


@code {

    [Parameter]
    public String Key { get; set; }

    private Drink mDrink;

    protected override async Task OnInitializedAsync() {
        var barId = new BarId(Guid.Empty);
        IEnumerable<Drink> drinks = await Repository.GetAllAsync(barId);
        mDrink = drinks.FirstOrDefault(x => x.Key.Equals(Key, StringComparison.OrdinalIgnoreCase));
    }

}
